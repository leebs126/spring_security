<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security" xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd">

	<http auto-config="true" use-expressions="true"  >
		<form-login login-page="/login/loginForm.do" default-target-url="/home.do" authentication-failure-url="/login/loginForm.do?error" username-parameter="uid" password-parameter="password" />
		<logout logout-url="/logout" logout-success-url="/home.do" delete-cookies="JSESSIONID" />
		
		<access-denied-handler ref="accessDenied" />
		<custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="filterSecurityInterceptor" />
		
		 
		<!-- <custom-filter before="FORM_LOGIN_FILTER" ref="filterSecurityInterceptor" />
		<access-denied-handler error-page="/login/accessDenied.do" /> -->
	</http>
	



	<authentication-manager>
		<authentication-provider user-service-ref="userJdbcDaoImpl">
			<!-- <password-encoder ref="bcryptPasswordEncoder" /> -->
		</authentication-provider>
	</authentication-manager>

	<!-- BCryptPasswordEncoder 클래스 빈 추가 -->
	<beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />


	<beans:bean id="filterSecurityInterceptor" 
	     class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<beans:property name="authenticationManager" 
		          ref="org.springframework.security.authenticationManager" />
		<beans:property name="accessDecisionManager" ref="accessDecisionManager" />
		<beans:property name="securityMetadataSource"
		          ref="reloadableFilterInvocationSecurityMetadataSource" />
	</beans:bean>


	<beans:bean id="accessDecisionManager" 
	            class="org.springframework.security.access.vote.AffirmativeBased">
		<beans:constructor-arg>
			<beans:list>
				<beans:bean class="org.springframework.security.access.vote.RoleVoter">
					<beans:property name="rolePrefix" value="" />
				</beans:bean>
			</beans:list>
		</beans:constructor-arg>
		<beans:property name="allowIfAllAbstainDecisions" value="false" />
	</beans:bean>

	<beans:bean id="reloadableFilterInvocationSecurityMetadataSource" 
	           class="com.spring.secu06.ex02.ReloadableFilterInvocationSecurityMetadataSource">
		<beans:constructor-arg ref="requestMap" />
		<beans:property name="securedObjectService" ref="securedObjectService" />
	</beans:bean>


	<beans:bean id="securedObjectService" class="com.spring.secu06.ex02.SecuredObjectServiceImpl">
		<beans:property name="securedObjectDao" ref="securedObjectDao" />
	</beans:bean>

	<beans:bean id="securedObjectDao" class="com.spring.secu06.ex02.SecuredObjectDao">
		<beans:property name="dataSource" ref="dataSource" />
<!-- 		<beans:property name="sqlRolesAndUrl"
			value="SELECT A.RESOURCE_PATTERN AS URL, B.AUTHORITY AS AUTHORITY
								FROM TB_SECURED_RESOURCES A, TB_SECURED_RESOURCES_ROLE B
								WHERE A.RESOURCE_ID = B.RESOURCE_ID
								AND A.RESOURCE_TYPE = 'url'
								ORDER BY A.SORT_ORDER" /> -->

	</beans:bean>
	<beans:bean id="requestMap" 
	    class="com.spring.secu06.ex02.UrlResourcesMapFactoryBean" init-method="init">
		<beans:property name="securedObjectService" ref="securedObjectService" />
	</beans:bean>


	<beans:bean id="userJdbcDaoImpl" class="com.spring.secu06.ex01.UserJdbcDaoImpl">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="rolePrefix" value="" />
		<beans:property name="usersByUsernameQuery">
			<beans:value>
				SELECT username, password, enabled
				FROM tb_users
				WHERE username = ?
			</beans:value>
		</beans:property>
		<beans:property name="authoritiesByUsernameQuery">
			<beans:value>
				SELECT username, authority
				FROM tb_authorities
				WHERE username = ?
			</beans:value>
		</beans:property>
		<beans:property name="enableGroups" value="false" />
	</beans:bean>
	
	<beans:bean id="accessDenied"     class="com.spring.secu06.ex02.CustomAccessDeniedHandler">
		<beans:property name="errorPage" value="/login/accessDenied.do" />
	</beans:bean>
	

 </beans:beans>

